import java.io.*;
import java.util.*;
import java.text.*;

//clase cliente
public class Cliente {
   private Nombre nombre;
   private Direccion direccion;
 
    
   public Cliente(Nombre nombre, Direccion direccion)
   {
      setNombre(nombre);
      setDireccion(direccion);
   }
 
   public void setNombre(Nombre nombre)
   {
      this.nombre=nombre;
   }
    
   public void setDireccion(Direccion direccion)
   {
      this.direccion=direccion;
   }
 
   public Nombre getNombre()
   {
      return nombre;
   }
   
   public Direccion getDireccion()
   {
      return direccion;
   }
    
   public String toString(){
      return "\n----------------------------Informacion  del Cliente----------------------------\n" + "Nombre: "+getNombre() +"\nDireccion: "+getDireccion();
   }
 }
 
//clase Nombre 
class Nombre{
   private String primerNombre;
   private String apellido1;
   private String apellido2;

   public Nombre(String primerNombre, String apellido1, String apellido2)
   {
      setPrimerNombre(primerNombre);
      setApellido1(apellido1);
      setApellido2(apellido2);
   }

   public void setPrimerNombre(String primerNombre)
   {
      this.primerNombre=primerNombre;
   }

   public void setApellido1(String apellido1)
   {
      this.apellido1=apellido1;
   }

   public void setApellido2(String apellido2)
   {
      this.apellido2=apellido2;
   }

   public String getPrimerNombre()
   {
      return primerNombre;
   }

   public String getApellido1()
   {
      return apellido1;
   }

   public String getApellido2()
   {
      return apellido2;
   }

   public String toString()
   {
      return primerNombre+" "+apellido1+" "+apellido2;
   }
}


//clase direccion
class Direccion
{
   private String calle;
   private int numero;
   private String colonia;
   private String municipio;
   private int cp;

   public Direccion(String calle, int numero, String colonia, String municipio, int cp)
   {
      setCalle(calle);
      setNumero(numero);
      setColonia(colonia);
      setMunicipio(municipio);
      setCp(cp);
   }

   public void setCalle(String calle)
   {
      this.calle=calle;
   }

   public void setNumero(int numero)
   {
      this.numero=numero;
   }

   public void setColonia(String colonia)
   {
      this.colonia=colonia;
   }

   public void setMunicipio(String municipio)
   {
      this.municipio=municipio;
   }

   public void setCp(int cp)
   {
      this.cp=cp;
   }

   public String getCalle()
   {
      return calle;
   }

   public int getNumero()
   {
      return numero;
   }

   public String getColonia()
   {
      return colonia;
   }

   public String getMunicipio()
   {
      return municipio;
   }

   public int getCp()
   {
      return cp;
   }

   public String toString()
   {
      return calle+", "+numero+", "+colonia+", "+municipio+", "+cp;
   }
}


//clase padre transporte
class Transporte {
    private String numPlaca;
    private Nombre nombre;
    public Transporte(String numPlaca, Nombre nombre){
        setNumPlaca(numPlaca);
        setNombre(nombre);
    }
    public void setNumPlaca(String numPlaca) {
        this.numPlaca = numPlaca;
    }
    public void setNombre(Nombre nombre) {
        this.nombre = nombre;
    }
    public Nombre getNombre() {
        return nombre;
    }
    public String getNumPlaca() {
        return numPlaca;
    }
    public String toString() {
        return "El transporte elegido es: ";
    }
}


//clase hija taxi de transporte
class Taxi extends Transporte{
    private Direccion direccion;
    private double costoTaxi;
    
    public Taxi(String numPlaca, Nombre nombre, Direccion direccion, double costoTaxi){
        super(numPlaca, nombre);
        setDireccion(direccion);
    }
    public void setDireccion(Direccion direccion) {
        this.direccion = direccion;
    }
    
    public void setCostoTaxi(double costoTaxi) {
        this.costoTaxi = costoTaxi;
    }
    
    public Direccion getDireccion() {
        return direccion;
    }
    
    public double getCostoTaxi(){
      return costoTaxi;
    }
    
    public String toString() {
        return super.toString()+" taxi. \nCosto: "+getCostoTaxi();
    }
}


//clase hija camion de transporte
class Camion extends Transporte{
    private double costoRuta;
    
    public Camion(String numPlaca, Nombre nombre,double costoRuta){
        super(numPlaca, nombre);
        setCostoRuta(costoRuta);
    }
    
    public void setCostoRuta(double costoRuta) {
        this.costoRuta = costoRuta;
    }
    
    public double getCostoRuta() {
        return costoRuta;
    }
    
    public String toString() {
        return super.toString()+"camion. \nCosto: "+getCostoRuta();
    }
}


//clase Principal 
class Principal{
    public static void main(String[] args) {
    Scanner s = new Scanner(System.in);
      byte loop = 1;
      byte t = 0;
       do{
         //Crear objeto de nombre
         System.out.println("\t\t\t ----- Datos del cliente -----");
         Nombre nombre = Principal.capturarNombre("Ingrese el nombre completo del cliente");
         //Crear objeto DireccionCliente
         Direccion direccionCliente=new Direccion(Principal.capturar("Ingrese la calle del domicilio del cliente"), Principal.pedirNumEntero("Ingrese el numero de domicilio del cliente"), Principal.capturar("Ingrese la colonia del cliente"), Principal.capturar("Ingrese el municipio del cliente"), Principal.pedirCP("Ingrese el codigo postal del cliente"));
         //Crear objeto cliente
         Cliente cliente1 = new Cliente(nombre, direccionCliente);
         //Crear direccion estacion de Transporte
         System.out.println("\t\t\t ----- Dirección estación de Transporte -----");
         Direccion direccionEstacion=new Direccion(Principal.capturar("Ingrese la calle del domicilio de la estacion"), Principal.pedirNumEntero("Ingrese el numero de domicilio de la estacion"), Principal.capturar("Ingrese la colonia de la estacion"), Principal.capturar("Ingrese el municipio de la estacion"), Principal.pedirCP("Ingrese el codigo postal de la estacion"));
         System.out.println("\n\t\t\t ----- Datos del chofer -----");
         //Crear objeto Chofer
         Nombre nombreChofer = Principal.capturarNombre("Ingrese el nombre completo del chofer");
         System.out.println("Quiere viajar en (1) taxi o en (2) camion? Ingrese el numero de la opcion deseada.");
         t = s.nextByte();
         if(t == 1){
         //Crear objeto Taxi
            Taxi taxi1 = new Taxi(Principal.capturar("Ingrese las placas: "), nombreChofer, direccionEstacion, 200.00);
            System.out.println(taxi1);
         }else if(t == 2){
         //Crear objeto Camion
            Camion cam1 = new Camion(Principal.capturar("Ingrese las placas: "), nombreChofer, 5.00);
            System.out.println(cam1);
            }
         System.out.println(cliente1);
         System.out.println("Quiere realizar otro viaje? Ingrese el numero (1) Si (0) No");
         loop = s.nextByte();
        }while(loop == 1);
    }

   
   //método para capturar el nombre completo de la persona de una sola vez
   public static Nombre capturarNombre(String mensaje) {
      Scanner s = new Scanner(System.in);
      System.out.println(mensaje);
      String nom[] = s.nextLine().split(" ");
      if (nom.length == 4) {
         nom[0] = nom[0]+" "+nom[1];
         nom[1] = nom[2];
         nom[2] = nom[3];
      }
      Nombre nombre = new Nombre (nom[0], nom[1], nom[2]);
      return nombre;
   }
   
   //método para capturar variables String
    public static String capturar(String mensaje){
        Scanner s=new Scanner(System.in);
        System.out.println(mensaje);
        return s.nextLine();
    }
    
    //método para pedir y validar numeros enteros positivos
    public static int pedirNumEntero(String mensaje){
      int numEntero=0;
      String numeroS="";
      boolean verdadero=true;
         do{
            Scanner s=new Scanner(System.in);
            System.out.println(mensaje);
            numeroS=s.nextLine(); 
        try {  
            numEntero=Integer.parseInt(numeroS); 
            return numEntero;
          } catch(NumberFormatException e){ 
            verdadero=false;
            System.out.println("\nTiene que ser un numero entero"); 
          } 
          }while(verdadero==false);
          return numEntero;
    }

    //método para pedir y validar el código postal
    public static int pedirCP(String mensaje){
    int numEntero=0;
    String numeroS="";
    boolean verdadero=true;
      do{
        Scanner s=new Scanner(System.in);
            System.out.println(mensaje);
            numeroS=s.nextLine(); 
        try {  
            numEntero=Integer.parseInt(numeroS); 
            if(numeroS.length()!=5)
            System.out.println("Tiene que ser un numero entero de 5 dígitos");
            else
            return numEntero;
          } catch(NumberFormatException e){ 
            verdadero=false;
            System.out.println("Tiene que ser un numero entero"); 
          } 
          }while(numeroS.length()!=5||verdadero==false);
          return numEntero;
    }
}
